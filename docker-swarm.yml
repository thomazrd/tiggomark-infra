version: '3.7'

services:

  mysql_db_5_7:
    image: mysql:5.7.41
    hostname: mysql_db_5_7
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '300M'
    environment:
      MYSQL_DATABASE: DB_markee
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123456789
      MYSQL_ROOT_PASSWORD: 123456789
    volumes:
      - mysql_db_5_7_dt:/var/lib/mysql
    ports:
      - target: 3306
        published: 4501
        protocol: tcp
        mode: ingress
    networks:
      - tiggomark_network
      - nginx_network

  postgres:
    image: postgres:12
    #hostname: postgres-hostname
    deploy:
      replicas: 1
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot_production
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=123456789
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: ingress
    networks:
      - tiggomark_network
      - nginx_network

  reports:
    hostname: reports-hostname
    image: metabase/metabase:latest
    environment:
      MB_DB_TYPE: mysql
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 3306
      MB_DB_USER: root
      MB_DB_PASS: 123456789
      MB_DB_HOST: mysql_8
    command: sh -c "java -jar /app/metabase.jar migrate release-locks && java -jar /app/metabase.jar"
    ports:
      - target: 3000
        published: 3001
        protocol: tcp
        mode: ingress
    networks:
      - tiggomark_network
      - nginx_network

  chatplusbase: &chatplusbase
    image: tiggomark/chatplus:latest
    env_file:
        - chatplus.env
    volumes:
      - chatplus_data_storage:/app/storage

  chatplus:
    <<: *chatplusbase
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    hostname: powchat-hostname
    deploy:
      replicas: 1
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: ingress
    networks:
      - tiggomark_network
      - nginx_network

  chatplus_sidekiq:
    <<: *chatplusbase
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    networks:
      - tiggomark_network
      - nginx_network

  redis:
    image: redis:alpine
    hostname: redis-hostname
    deploy:
      replicas: 1
    command: [ "sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\"" ]
    env_file:
      - chatplus.env
    volumes:
      - redis_data_cl:/data
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: ingress
    networks:
      - tiggomark_network
      - nginx_network

  redis_whatsapp_api:
    image: redis:alpine
    hostname: rediswhatsapp
    command: [ "sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\"" ]
    env_file:
      - .env-whatsapp-api
    volumes:
      - redis_data_whatsapp_api:/data
    ports:
      - target: 6379
        published: 6375
        protocol: tcp
        mode: ingress
    networks:
      - tiggomark_network
      - nginx_network

  whatsapp_api:
    hostname: whatsapp_api
    image: tiggomark/whatsapp_api:latest
    restart: always
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    volumes:
      - whatsapp_api_instances:/evolution/instances
      - whatsapp_api_store:/evolution/store
    networks:
      - tiggomark_network
      - nginx_network
    env_file:
      - .env-whatsapp-api
    command: [ 'node', './dist/src/main.js' ]
    expose:
      - 8080

  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo
    ports:
      - target: 27017
        published: 27017
        protocol: tcp
        mode: ingress
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - PUID=1000
      - PGID=1000
    volumes:
      - mongodb_data:/data/db
      - mongodb_configdb:/data/configdb
    networks:
      - tiggomark_network
      - nginx_network
    expose:
      - 27017

  mongo-express:
    image: mongo-express
    hostname: mongo-express
    networks:
      - tiggomark_network
      - nginx_network
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    ports:
      - target: 8081
        published: 8087
        protocol: tcp
        mode: ingress
    links:
      - mongodb

   ###################################################

  cluster_agent:
    hostname: clusteragent-hostname
    image: tiggomark/clusteragent:latest
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '380M'

    ports:
      - target: 8089
        published: 8089
        protocol: tcp
        mode: ingress

    environment:
      SPRING_PROFILES_ACTIVE: prod
      NEW_RELIC_LICENSE_KEY: 'a7befd5b85c71de724a6fcf7c4f13e91FFFFNRAL'
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
      DB_HOST: 'mysql_8'
      DB_PORT: '3306'
      DB_NAME: 'saasconnector'
      DB_USERNAME: 'root'
      DB_PASSWORD: '123456789'

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/temp:/var/temp

    networks:
      - tiggomark_network
      - nginx_network


  portainer:
    image: portainer/portainer-ce:latest
    hostname: portainer-hostname
    ports:
      - target: 9000
        published: 9000
        protocol: tcp
        mode: ingress
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - tiggomark_network


  projects:
    image: tiggomark/projects:latest
    hostname: projects-hostname

    ports:
      - target: 80
        published: 8081
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '256M'
    environment:
      TIGGO_SITENAME: 'Tiggomark'
      TIGGO_DEBUG: 0
      TIGGO_DB_HOST: 'mysql_8'
      TIGGO_SAAS_CONNECTOR_URL: 'http://saas-connector-hostname:8080'
      TIGGO_SAAS_CONNECTOR_APP_TOKEN: '217dc0d4-a190-480e-b871-ebf2adec7055'
      TIGGO_SAAS_CONNECTOR_APP_ID: 'APP_0286C4A3E1E94998BD79A1EEACA5903C'
      TIGGO_DB_USER: 'root'
      TIGGO_DB_PASSWORD: 123456789
      TIGGO_DB_PORT: '3306'
      TIGGO_DB_DATABASE: 'saasconnector'
      TIGGO_DEFAULT_TIMEZONE: 'Europe/Stockholm'
      TIGGO_SESSION_PASSWORD: 'GD8Fozemg3AqM9my86TTfgTeGPXXkPF7'
      TIGGO_SESSION_EXPIRATION: 28800
    volumes:
      - projects_public_user-files:/var/www/html/public/userfiles
      - projects_user-files:/var/www/html/userfiles

    networks:
      - tiggomark_network
      - nginx_network


  markee:
      image: tiggomark/markee:latest
      hostname: markee-hostname
      deploy:
        replicas: 1
        resources:
          limits:
            cpus: '0.5'
            memory: '512M'
      ports:
        - target: 80
          published: 8086
          protocol: tcp
          mode: ingress

      environment:
        MAUTIC_DB_HOST: mysql_db_5_7
        MAUTIC_DB_PASSWORD: 123456789
        MAUTIC_DB_USER: root
        MAUTIC_DB_PORT: 3306
        MAUTIC_DB_NAME: DB_markee

      volumes:
        - markee_html_files:/var/www/html

      networks:
        - tiggomark_network
        - nginx_network


  saas_connector:
    image: tiggomark/saasconnector:latest
    hostname: saas-connector-hostname
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '800M'
    env_file:
      - common.env
      - saas-connector.env
    depends_on:
        - mysql_8

    volumes:
      - saas_connector_files:/var/uploadfiles
    networks:
      - tiggomark_network
      - nginx_network
    ports:
      - target: 8089
        published: 8085
        protocol: tcp
        mode: ingress

  mysql_8:
    image: mysql:8
    hostname: mysql_8
    #command: --default-authentication-plugin=mysql_native_password --wait_timeout=120 --innodb_buffer_pool_size=256M --innodb_log_file_size=100M --innodb_flush_log_at_trx_commit=2 --innodb_flush_method=O_DIRECT_NO_FSYNC --innodb-force-recovery=1
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
    environment:
      MYSQL_DATABASE: 'saasconnector'
      #MYSQL_INIT_CONNECT: "SET SESSION wait_timeout = 300;"
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: 123456789
      MYSQL_ROOT_PASSWORD: 123456789
    volumes:
      - mysql_8_data:/var/lib/mysql
    ports:
      - target: 3306
        published: 4500
        protocol: tcp
        mode: ingress
    networks:
      - tiggomark_network

  mysql_check:
    image: mysql:8
    command: [ "bash", "-c", "mysqlcheck --host=mysql_8 --all-databases --check --auto-repair --user=root --password=$MYSQL_ROOT_PASSWORD" ]
    environment:
      MYSQL_ROOT_PASSWORD: 123456789
    networks:
      - tiggomark_network


  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.8.17-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data-prod:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

    networks:
      - tiggomark_network

  nginx:
    image: nginx
    hostname: nginx_infra
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '256M'
    volumes:
      - ./ssl/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/fullchain.pem:/etc/letsencrypt/live/tiggomark.com.br/fullchain.pem
      - ./ssl/privkey.pem:/etc/letsencrypt/live/tiggomark.com.br/privkey.pem
      - ./ssl/projects/fullchain.pem:/etc/letsencrypt/live/projects.tiggomark.com.br/fullchain.pem
      - ./ssl/projects/privkey.pem:/etc/letsencrypt/live/projects.tiggomark.com.br/privkey.pem
      - ./ssl/markee/fullchain.pem:/etc/letsencrypt/live/markee.tiggomark.com.br/fullchain.pem
      - ./ssl/markee/privkey.pem:/etc/letsencrypt/live/markee.tiggomark.com.br/privkey.pem
      - ./ssl/crm/fullchain.pem:/etc/letsencrypt/live/crm.tiggomark.com.br/fullchain.pem
      - ./ssl/crm/privkey.pem:/etc/letsencrypt/live/crm.tiggomark.com.br/privkey.pem
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress

      - target: 443
        published: 443
        protocol: tcp
        mode: ingress

    networks:
      - tiggomark_network
      - nginx_network

  espocrm-daemon:
    image: tiggomark/crm:latest
    volumes:
      - tiggocrm:/var/www/html

    entrypoint: docker-daemon.sh
    networks:
      - tiggomark_network
      - nginx_network

  espocrm-websocket:
    image: tiggomark/crm:latest
    hostname: espocrm-websocket
    container_name: espocrm-websocket
    environment:
      ESPOCRM_CONFIG_USE_WEB_SOCKET: "true"
      ESPOCRM_CONFIG_WEB_SOCKET_URL: "ws://espocrm-websocket:8083"
      ESPOCRM_CONFIG_WEB_SOCKET_ZERO_M_Q_SUBSCRIBER_DSN: "tcp://*:7777"
      ESPOCRM_CONFIG_WEB_SOCKET_ZERO_M_Q_SUBMISSION_DSN: "tcp://espocrm-websocket:7777"
    volumes:
      - tiggocrm:/var/www/html
    entrypoint: docker-websocket.sh
    ports:
      - target: 8080
        published: 8083
        protocol: tcp
        mode: ingress

    networks:
      - tiggomark_network
      - nginx_network

  crm:
    image: tiggomark/crm:latest
    hostname: tiggo-crm
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: '256M'
    networks:
      - tiggomark_network
      - nginx_network
    environment:
      ESPOCRM_DATABASE_HOST: 'mysql_8'
      ESPOCRM_DATABASE_USER: root
      ESPOCRM_DATABASE_NAME: DB_CRM_tiggomark
      ESPOCRM_DATABASE_PASSWORD: 123456789
      ESPOCRM_ADMIN_USERNAME: admin
      ESPOCRM_ADMIN_PASSWORD: leghacy123
      ESPOCRM_SITE_URL: "http://tiggo-crm:8082"
    volumes:
      - tiggocrm:/var/www/html
      - crm_upload_files:/var/upload

    ports:
      - target: 80
        published: 8082
        protocol: tcp
        mode: ingress


  intersaas:
      image: tiggomark/intersaas:latest
      hostname: intersaas
      deploy:
        replicas: 1
        resources:
          limits:
            cpus: '0.5'
            memory: '512M'
      ports:
        - target: 8080
          published: 8084
          protocol: tcp
          mode: ingress
      env_file:
        - common.env
        - intersaas.env
      environment:
        #NEW_RELIC_LICENSE_KEY: 'a7befd5b85c71de724a6fcf7c4f13e91FFFFNRAL'
        SPRING_PROFILES_ACTIVE: prod
        DB_HOST: mysql_8
        DB_USERNAME: root
        DB_PASSWORD: 123456789
        DB_PORT: 3306
        DB_NAME: SAAS_INTEGRATOR_ROOT_DB
        RABBIT_MQ_HOST: rabbitmq

      networks:
        - tiggomark_network
        - nginx_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql_db_5_7
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 123456789
    ports:
      - '7071:80'
    networks:
      - tiggomark_network

  phpmyadmin2:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql_8
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 123456789
    ports:
      - '7070:80'
    networks:
      - tiggomark_network

volumes:
  postgres_data:
  rabbitmq-data-prod:
  portainer_data:
  projects_user-files:
  projects_public_user-files:
  mysql_8_data:
  tiggocrm:
  crm_upload_files:
  saas_connector_files:
  redis_data_cl:
  redis_data_whatsapp_api:
  mysql_db_5_7_dt:
  markee_html_files:
  chatplus_data_storage:
  whatsapp_api_instances:
  whatsapp_api_store:
  mongodb_data:
  mongodb_configdb:


networks:
  tiggomark_network:
    driver: overlay
    ipam:
        config:
            - subnet: 10.0.9.0/24
    attachable: true

  nginx_network:
    driver: overlay






