name: tiggomark-cluster
"on":
    push:
        branches:
            - master
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: ttiggomark-cluster_group
    AZURE_CONTAINER_REGISTRY: acrworkflow1678750080934
    CLUSTER_NAME: ttiggomark-cluster
    CLUSTER_RESOURCE_GROUP: ttiggomark-cluster_group
    CONTAINER_NAME: image-workflow-1678750080934
    DEPLOYMENT_MANIFEST_PATH: |
        ./k8s/projects-auto-scaling.yaml
        ./k8s/projects-db-data-persistentvolumeclaim.yaml
        ./k8s/projects-db-deployment.yaml
        ./k8s/projects-db-service.yaml
        ./k8s/projects-deployment.yaml
        ./k8s/projects-load-balancer.yaml
        ./k8s/projects-public-user-files-persistentvolumeclaim.yaml
        ./k8s/projects-service.yaml
        ./k8s/projects-user-files-persistentvolumeclaim.yaml
        ./k8s/saas-connector-auto-scaling.yaml
        ./k8s/saas-connector-db-data-persistentvolumeclaim.yaml
        ./k8s/saas-connector-db-deployment.yaml
        ./k8s/saas-connector-db-service.yaml
        ./k8s/saas-connector-deployment.yaml
        ./k8s/saas-connector-load-balancer.yaml
        ./k8s/saas-connector-service.yaml
        ./k8s/tiggomark_network-networkpolicy.yaml
jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Build and push image to ACR
              run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./docker-compose-local.yml ./
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
                manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
                namespace: namespace-workflow-1678750080934
